%YAML 1.2
---
# See http://www.sublimetext.com/docs/3/syntax.html
name: tanuki
file_extensions:
  - pin
scope: source.example-c
contexts:
  main:
    # Strings begin and end with quotes, and use backslashes as an escape
    # character
    - match: '「'
      scope: punctuation.definition.string.begin.example-c
      push: double_quoted_string

    # Comments begin with a '//' and finish at the end of the line
    - match: '＃'
      scope: punctuation.definition.comment.example-c
      push: line_comment

    # Keywords are if, else for and while.
    # Note that blackslashes don't need to be escaped within single quoted
    # strings in YAML. When using single quoted strings, only single quotes
    # need to be escaped: this is done by using two single quotes next to each
    # other.
    - match: '\b(もし|その他|返す)\b'
      scope: keyword.control.example-c

    - match: '(関数)、'
      captures:
        1: keyword.control.example-c
      push: function

    # Numbers
    - match: '\b(-)?[０-９.]+\b'
      scope: constant.numeric.example-c

    - match: '\b([^、（）]*)（'
      captures:
        1: variable.function

  double_quoted_string:
    - meta_scope: string.quoted.double.example-c
    - match: '\\.'
      scope: constant.character.escape.example-c
    - match: '」'
      scope: punctuation.definition.string.end.example-c
      pop: true

  function:
    - match: '、'
      scope: source.example-c
    - match: '([^（]*)（'
      captures:
        1: entity.name.function
    - match: '[^、）]*'
      scope: variable.parameter
    - match: '）'
      pop: true

  line_comment:
    - meta_scope: comment.line.example-c
    - match: $
      pop: true
