const wchar_t *corePinponStarter = LR"(

表示（「ピンポン・プログラミング言語」）
バージョン＝１

関数、インポート（ファイル名）
　ファイルテキスト＝ファイル読む（ファイル名）
　返す、評価（ファイルテキスト）

配列型＝辞書（）

関数、配列（＊引数）
　親設定する（引数、配列型）
　返す、引数

関数、新関数（自分、番号）
　配列追加（自分、番号）
配列型・追加＝新関数

関数、新関数（自分、アイテム）
　関数、手伝い（番）
　　もし、番＝＝長さ（自分）
　　　返す、０
　　もし、自分【番】＝＝アイテム
　　　返す、１
　　返す、手伝い（番＋１）
　返す、手伝い（０）
配列型・入っている＝新関数

関数、期間配列（から、まで）
　もし、から＞＝まで
　　返す、配列（）
　返す、配列（から）＋期間配列（から＋１、まで）

関数、＿（あ）
　返す、あ



関数、部分文字列（入力文字列、始まり、終わり）
　もし、終わり＝＝－１
　　終わり＝長さ（入力文字列）
　結果＝「」
　何番＝０
　関数、ループ（文字）
　　外側、結果、何番
　　もし、何番＞＝始まり
　　　もし、何番＜終わり
　　　　結果＝結果＋文字
　　何番＝何番＋１
　それぞれ（入力文字列、ループ）
　返す、結果


関数、逆文字列（言葉）
　結果＝「」
　関数、ループ（文字）
　　外側、結果
　　結果＝文字＋結果
　それぞれ（言葉、ループ）
　返す、結果

関数、無を返す関数（）
　あ＝１

無＝無を返す関数（）

関数、配列イコール（左、右）
　もし、長さ（左）！＝長さ（右）
　　返す、０
　関数、ループ（左、右、番号）
　　もし、長さ（左）＝＝番号
　　　返す、１
　　もし、左【番号】！＝右【番号】
　　　返す、０
　　返す、ループ（右、左、番号＋１）
　返す、ループ（左、右、０）


関数、数字から文字列（数字）
　もし、数字＜１０
　　返す、「０１２３４５６７８９」【数字】
　返す、数字から文字列（数字／１０）＋数字から文字列（剰余（数字、１０））

関数、文字分ける（入力、文字）
　もし、入力＝＝「」
　　返す、配列（入力）
　関数、手伝い（から、まで、結果）
　　もし、まで＞長さ（入力）
　　　返す、結果
　　もし、まで＝＝長さ（入力）
　　　もし、まで！＝から
　　　　返す、結果＋配列（部分文字列（入力、から、まで））
　　　返す、結果
　　もし、入力【まで】＝＝文字
　　　もし、から＝＝まで
　　　　返す、手伝い（まで＋１、まで＋１、結果）
　　　返す、手伝い（まで＋１、まで＋１、結果＋配列（部分文字列（入力、から、まで）））
　　返す、手伝い（から、まで＋１、結果）
　返す、手伝い（０、０、配列（））

)";
